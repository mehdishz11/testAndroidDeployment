name: Generated APK AAB (Upload - Create Artifact To Github Action)

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  playstore_name: testing_store
  
permissions:
      contents: write
on:
  workflow_dispatch:
  push:
    branches:
      - main
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4


      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

        # sing the application
      - name: Decode Signing Keystored
        run: |
          echo "${{ secrets.SIGNING_KEY_BASE64 }}" > keystore_base64.txt
          base64 -d keystore_base64.txt > app/Test.jks
          rm keystore_base64.txt

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # For APK Release
      - name: Build signed APK release
        run: |
          ./gradlew ${{ env.main_project_module }}:assembleRelease \
            -Pandroid.injected.signing.store.file=${{ github.workspace }}/app/Test.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.SIGNING_STORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.SIGNING_KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.SIGNING_KEY_PASSWORD }}

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: ${{ env.main_project_module }}/release/*.apk

      - name: Create Git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v1.0.${{ github.run_number }}
          git push origin v1.0.${{ github.run_number }}

      - name: Get versionName from Gradle
        id: get_version
        run: |
          VERSION_NAME=$(grep "versionName" app/build.gradle | awk '{print $2}' | tr -d '\"')
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION_NAME }}
          name: Release v${{ env.VERSION_NAME }}
          files: app/build/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete default source code assets
        run: |
          gh release delete-asset v${{ env.VERSION_NAME }} "Source code (zip)" --yes || true
          gh release delete-asset v${{ env.VERSION_NAME }} "Source code (tar.gz)" --yes || true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
